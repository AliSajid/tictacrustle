# SPDX-FileCopyrightText: 2022 - 2024 Ali Sajid Imami
#
# SPDX-License-Identifier: Apache-2.0
# SPDX-License-Identifier: MIT

name: Book Deployment
on:
  workflow_call:
    outputs:
      deployment_url:
        description: "The vercel deployment url of the book"
        value: ${{ jobs.deploy_book.outputs.deployment_url }}

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.ACTIONS_PAT_GITHUB }}
  BRANCH: ${{ github.ref_name }}

jobs:
  deploy_book:
    runs-on: ubuntu-latest
    env:
      PROJECT_ENVIRONMENT: ''
      STORE_PATH: ''
    outputs:
      deployment_url: ${{ steps.output_deployment_url.outputs.deployment_url }}
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Decide Deployment Environment
        id: deployment_environment
        run: |
          if [[ ${{ env.BRANCH }} == "main" ]]; then
            echo "PROJECT_ENVIRONMENT=production" >> $GITHUB_ENV
          else
            echo "PROJECT_ENVIRONMENT=preview" >> $GITHUB_ENV
          fi
      - name: Setup NodeJS
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '22'
      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        id: rust-toolchain
        with:
          toolchain: stable
      - name: Cache dependencies
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
      - name: Install cargo-binstall
        uses: taiki-e/install-action@735e5933943122c5ac182670a935f54a949265c1 # v2.52.4
        with:
          tool: cargo-binstall
      - name: Install dependencies
        run: cargo binstall --log-level debug --no-confirm --locked mdbook mdbook-plantuml mdbook-inline-highlighting
      - name: Install dependencies
        run: pnpm install -g vercel@latest
      - name: Populate Preview Variables
        run: vercel pull --yes --environment=${{env.PROJECT_ENVIRONMENT}} --token=${{ env.VERCEL_TOKEN }}
      - name: Build the Book
        run: mdbook build guide
      - name: Build for Vercel deployment -- Preview
        if: env.PROJECT_ENVIRONMENT == 'preview'
        run: vercel build --cwd guide/book -y -d --token=${{ env.VERCEL_TOKEN }}
      - name: Build for Vercel deployment -- Production
        if: env.PROJECT_ENVIRONMENT == 'production'
        run: vercel build --cwd guide/book -y --prod -d --token=${{ env.VERCEL_TOKEN }}
      - name: Deploy to Vercel -- Preview
        if: env.PROJECT_ENVIRONMENT == 'preview'
        run: vercel deploy --cwd guide/book --prebuilt --token=${{ env.VERCEL_TOKEN }} > deployment_url
      - name: Deploy to Vercel -- Production
        if: env.PROJECT_ENVIRONMENT == 'production'
        run: vercel deploy --cwd guide/book --prod --prebuilt --token=${{ env.VERCEL_TOKEN }} > deployment_url
      - name: Output Deployment URL
        id: output_deployment_url
        run: echo "deployment_url=$(cat deployment_url)" >> $GITHUB_OUTPUT
