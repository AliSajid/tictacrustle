on:
  workflow_call:
    outputs:
      new_version:
        description: 'The new version to release'
        value: ${{ jobs.semantic.outputs.new_release_version }}
      new_release_published:
        description: 'Whether a new release was published'
        value: ${{ jobs.semantic.outputs.new_release_published }}

name: Semantic Release

env:
  RUST_BACKTRACE: 1
  SEMREL_RUST_VERSION: 2.1.3


jobs:
    check_release:
        name: Check Release
        runs-on: ubuntu-latest
        outputs:
          new-release-published:
            description: Indicates whether a new release will be published. The value is a string, either 'true' or 'false'.
            value: ${{ steps.get-next-version.outputs.new-release-published }}
          new-release-version:
            description: If a new release will be published, the version of the new release. The value is a string, for example '1.3.0'.
            value: ${{ steps.get-next-version.outputs.new-release-version }}
        steps:
          - name: Checkout
            uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
            with:
                fetch-depth: 0
                persist-credentials: false

          - name: Configure Node.js
            uses: actions/setup-node@v3
            with:
              node-version: lts/*

          - name: Install is-semantic-release-configured
            uses: EricCrosson/install-github-release-binary@v2
            with:
              targets: EricCrosson/is-semantic-release-configured@v1

          - run: |
              : Check for conflicting semantic-release configuration
              if is-semantic-release-configured; then
                echo "::warning title=Invalid precondition::Expected semantic-release to not be configured at this point in this action's execution"
              fi
            shell: bash

          - id: get-next-version
            run: |
              : calculate next semantic-release version
              ${semantic_release} --dry-run --verify-conditions semantic-release-export-data --generate-notes semantic-release-export-data
            shell: bash

    release:
        name: Semantic Release
        needs: check_release
        runs-on: ubuntu-latest
        steps:
          - name: Checkout
            uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
            with:
                fetch-depth: 0
                persist-credentials: false

          - name: Install Python
            if: needs.check_release.outputs.new-release-published == 'true'
            uses: actions/setup-python@5ccb29d8773c3f3f653e1705f474dfaa8a06a912
            with:
              python-version: '3.10'

          - name: install commitizen
            if: needs.check_release.outputs.new-release-published == 'true'
            run: pip install -U commitizen

          - name: Install Rust Stable
            uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f
            if: needs.check_release.outputs.new-release-published == 'true'
            with:
                profile: minimal
                toolchain: stable
                override: true

          # The release build is used in the Semantic Release step
          - name: Build
            uses: actions-rs/cargo@ae10961054e4aa8b4aa7dffede299aaf087aa33b
            if: needs.check_release.outputs.new-release-published == 'true'
            with:
                command: build
                args: --release

          - name: Install Semantic Release Rust
            if: needs.check_release.outputs.new-release-published == 'true'
            run: cargo install semantic-release-cargo --version ${{ env.SEMREL_RUST_VERSION }}

          - name: Semantic Release
            uses: cycjimmy/semantic-release-action@8f6ceb9d5aae5578b1dcda6af00008235204e7fa
            if: needs.check_release.outputs.new-release-published == 'true'
            id: semantic
            with:
                semantic_version: 19
                extra_plugins: |
                    @semantic-release/exec@6
                    @semantic-release/git@10
                    @semantic-release-cargo/semantic-release-cargo@2
            env:
                GITHUB_TOKEN: ${{ secrets.ACTIONS_PAT_GITHUB }}
                CARGO_REGISTRY_TOKEN: ${{ secrets.SEMREL_CRATES_IO }}
